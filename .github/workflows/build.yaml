name: Build Training and Publish

on:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      -
        name: Set up npm for linting
        uses: actions/setup-node@v2
        with:
          node-version: '15.x'
      -
        name: Lint Markdown
        run: npm ci && npm run mdlint
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to Quay.io Container Registry
        uses: docker/login-action@v1 
        with:
          registry: quay.io
          username: ${{ secrets.QUAYIO_USERNAME }}
          password: ${{ secrets.QUAYIO_TOKEN }}
      -
        name: Build Acend Version
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            quay.io/acend/kubernetes-basics-training:pr-${{ github.event.pull_request.number }}
      -
        name: Run vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'quay.io/acend/kubernetes-basics-training:pr-${{ github.event.pull_request.number }}'
          format: 'table'
          output: 'trivy-results.txt'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os'
          severity: 'CRITICAL,HIGH'
      -
        name: Archive vulnerability scan results
        uses: actions/upload-artifact@v2
        with:
          name: trivy-results-build
          path: trivy-results.txt
      -
        name: Build Mobi Version
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            TRAINING_HUGO_ENV=mobi
          push: true
          tags: |
            quay.io/acend/kubernetes-basics-training:pr-${{ github.event.pull_request.number }}-mobi
      -
        name: Build Rancher Version
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            TRAINING_HUGO_ENV=rancher
          push: true
          tags: |
            quay.io/acend/kubernetes-basics-training:pr-${{ github.event.pull_request.number }}-rancher
      -
        name: Build OpenShift Version
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            TRAINING_HUGO_ENV=openshift
          push: true
          tags: |
            quay.io/acend/kubernetes-basics-training:pr-${{ github.event.pull_request.number }}-openshift
      -
        name: Build Netcetera Version
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            TRAINING_HUGO_ENV=netcetera
          push: true
          tags: |
            quay.io/acend/kubernetes-basics-training:pr-${{ github.event.pull_request.number }}-netcetera
      -
        name: Build Techlab Version
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            TRAINING_HUGO_ENV=techlab
          push: true
          tags: |
            quay.io/appuio/techlab:pr-${{ github.event.pull_request.number }}
      -
        name: 'Install Helm'
        uses: azure/setup-helm@v1
        with:
          version: v3.6.2
      -
        name: Install Kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: v1.21.2
      - 
        name: Create KUBECONFIG
        env:
          KUBE_CONFIG: '${{ secrets.KUBECONFIG_TEST }}'
        run: |
          mkdir -p $HOME/.kube
          echo "$KUBE_CONFIG" > $HOME/.kube/config
      - 
        name: Deploy Helm Release
        env:
          TRAINING_HELM_RELEASE: 'pr-${{ github.event.pull_request.number }}'
          TRAINING_NAMESPACE: 'acend-kubernetes-basics-training-test'
          TRAINING_VERSION: '${{ github.sha }}'
        run: |
          helm upgrade $TRAINING_HELM_RELEASE acend-training-chart --install --wait --kubeconfig $HOME/.kube/config  --namespace=$TRAINING_NAMESPACE --set=app.name=$HELM_RELEASE --set=app.version=$TRAINING_VERSION --repo=https://acend.github.io/helm-charts/ --values=helm-chart/values.yaml --atomic
      - 
        name: Redeploy Deployments
        env:
          TRAINING_HELM_RELEASE: 'pr-${{ github.event.pull_request.number }}'
          TRAINING_NAMESPACE: 'acend-kubernetes-basics-training-test'
        run: |
          kubectl rollout restart deployment/$TRAINING_HELM_RELEASE-acend-kubernetes-basics-acend --kubeconfig $HOME/.kube/config --namespace $TRAINING_NAMESPACE
          kubectl rollout restart deployment/$TRAINING_HELM_RELEASE-acend-kubernetes-basics-mobi --kubeconfig $HOME/.kube/config --namespace $TRAINING_NAMESPACE
          kubectl rollout restart deployment/$TRAINING_HELM_RELEASE-acend-kubernetes-basics-rancher --kubeconfig $HOME/.kube/config --namespace $TRAINING_NAMESPACE
          kubectl rollout restart deployment/$TRAINING_HELM_RELEASE-acend-kubernetes-basics-openshift --kubeconfig $HOME/.kube/config --namespace $TRAINING_NAMESPACE
          kubectl rollout restart deployment/$TRAINING_HELM_RELEASE-acend-kubernetes-basics-netcetera --kubeconfig $HOME/.kube/config --namespace $TRAINING_NAMESPACE
          kubectl rollout restart deployment/$TRAINING_HELM_RELEASE-appuio-techlab --kubeconfig $HOME/.kube/config --namespace $TRAINING_NAMESPACE
      -
        name: Comment PR Environments in PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          message: |
           PR Environments: 
           * acend version <https://kubernetes-basics-pr-${{ github.event.pull_request.number }}.training.acend.ch>
           * mobi version <https://kubernetes-basics-mobi-pr-${{ github.event.pull_request.number }}.k8s.puzzle.ch>
           * rancher version <https://kubernetes-basics-rancher-pr-${{ github.event.pull_request.number }}.training.acend.ch>
           * openshift version <https://openshift-basics-pr-${{ github.event.pull_request.number }}.training.acend.ch>
           * netcetera version <https://kubernetes-basics-netcetera-pr-${{ github.event.pull_request.number }}.training.acend.ch>
           * techlab: <https://techlab-pr-${{ github.event.pull_request.number }}.openshift.ch>
